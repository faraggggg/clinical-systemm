<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        s5e3s3o6AHAKhnrpQ9UfkgcATkQ2T55VLKKrpwAAp6j21PPh9/j9cz1zADgff/n73b+VcP+PVcX//Zf/
        +t9/qocBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIDj+uWX/wcMvk+EDggWdgAAAABJRU5ErkJggg==
</value>
  </data>
</root>